/ {
    chosen { zmk,matrix_transform = &five_column_transform; };
};

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define TAPPING_TERM 200
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 10    // 10
/ {
    behaviors {
        /*
    * td_lock groups locking functions into one key:
    *  - tap once to lock the host
    *  - tap twice to put the host to sleep
    */

        as: as {
            compatible = "zmk,behavior-hold-tap";
            label = "AS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "NEW_BEHAVIOR";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        ESC_ {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        TAB_ {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        CAPS_ {
            bindings = <&kp CAPSLOCK>;
            key-positions = <10 20>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <20 21>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <21 22>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <22 23>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <23 24>;
        };

        noundo {
            bindings = <&kp LC(Y)>;
            key-positions = <20 21 22>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <8 9>;
        };

        aspas {
            bindings = <&kp SQT>;
            key-positions = <18 19>;
        };

        tio {
            bindings = <&kp TILDE>;
            key-positions = <17 18>;
        };

        interrogacao {
            bindings = <&kp QUESTION>;
            key-positions = <28 29>;
        };
    };

    macros {
        teste: teste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(M) &kp A &kp I &kp O &kp AT &kp N3 &kp N2 &kp N6 &kp N1 &kp N5 &kp N9 &kp N4 &kp N8 &kp N7>;
            label = "TESTE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
  &as LS(Q) Q  &as LS(W) W  &as LS(E) E  &as LS(R) R  &as LS(T) T            &as LS(Y) Y        &as LS(U) U                 &as LS(I) I          &as LS(O) O      &as LS(P) P
  &as LS(A) A  &as LS(S) S  &as LS(D) D  &as LS(F) F  &as LS(G) G            &as LS(H) H        &as LS(J) J                 &as LS(K) K          &as LS(L) L      &as LS(SEMICOLON) SEMICOLON
  &as LS(Z) Z  &as LS(X) X  &as LS(C) C  &as LS(V) V  &as LS(B) B            &as LS(N) N        &as LS(M) M                 &as LS(COMMA) COMMA  &as LS(DOT) DOT  &as LS(FSLH) FSLH
                            &none        &lt 2 SPACE  &mt LSHIFT LEFT_GUI    &mt LA(TAB) ENTER  &mt LEFT_CONTROL BACKSPACE  &mo 1
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
  &kp N1  &kp N2          &kp N3          &kp N4           &kp N5            &kp N6  &kp N7    &kp N8    &kp N9     &kp N0
  &none   &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &msc SCRL_UP      &none   &kp HOME  &kp UP    &kp END    &kp PG_UP
  &none   &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN    &teste  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN
                          &teste          &mo 3            &trans            &trans  &trans    &trans
            >;
        };

        symbols_layer {
            label = "SYMBOL";
            bindings = <
  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET      &kp AMPS   &kp STAR          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
  &kp F1    &kp F2  &kp F3    &kp F4      &kp F5         &kp MINUS      &kp EQUAL  &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp BSLH
  &kp F6    &kp F7  &kp F8    &kp F9      &kp F10        &kp UNDER      &kp PLUS   &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp PIPE
                    &none     &trans      &trans         &kp LG(RIGHT)  &trans     &mo 3
            >;
        };

        Advanced {
            label = "adv";
            bindings = <
  &trans        &none         &none         &none         &none           &none       &none         &none         &none             &none
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY_PAUSE  &none
  &bt BT_CLR    &trans        &trans        &bootloader   &sys_reset      &sys_reset  &bootloader   &none         &none             &none
                              &trans        &trans        &trans          &trans      &trans        &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
